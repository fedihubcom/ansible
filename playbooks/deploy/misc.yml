---
- hosts: misc.crypto-libertarian.com
  module_defaults:
    apt:
      force_apt_get: true
      update_cache: true
      cache_valid_time: 86400
  roles:
    - kotovalexarian.common
    - rvm.ruby
  tasks:
    - name: Install system packages
      apt:
        name: redis-server

    - name: Create system group
      group:
        name: '{{ item }}'
        system: true
      with_items:
        - report_ip
        - dyndns

    - name: Create system user
      user:
        name: '{{ item }}'
        group: '{{ item }}'
        system: true
        create_home: false
      with_items:
        - report_ip
        - dyndns

    - name: Check RVM gemset
      shell: >
        /bin/bash --login -c
        'rvm use ruby-2.7.0@crypto_libertarian-report_ip'
      ignore_errors: true
      register: check_rvm_gemset_result_for_report_ip
      changed_when: false

    - name: Check RVM gemset
      shell: >
        /bin/bash --login -c
        'rvm use ruby-2.7.0@crypto_libertarian-dyndns'
      ignore_errors: true
      register: check_rvm_gemset_result_for_dyndns
      changed_when: false

    - name: Create RVM gemset
      shell: >
        /bin/bash --login -c
        'rvm use ruby-2.7.0@crypto_libertarian-report_ip --create'
      when: check_rvm_gemset_result_for_report_ip.rc != 0

    - name: Create RVM gemset
      shell: >
        /bin/bash --login -c
        'rvm use ruby-2.7.0@crypto_libertarian-dyndns --create'
      when: check_rvm_gemset_result_for_dyndns.rc != 0

    - name: Check Bundler
      shell: >
        /bin/bash --login -c
        "rvm ruby-2.7.0@crypto_libertarian-report_ip do
        gem info bundler --installed --version '~> 2.0'"
      ignore_errors: true
      register: check_bundler_result_for_report_ip
      changed_when: false

    - name: Check Bundler
      shell: >
        /bin/bash --login -c
        "rvm ruby-2.7.0@crypto_libertarian-dyndns do
        gem info bundler --installed --version '~> 2.0'"
      ignore_errors: true
      register: check_bundler_result_for_dyndns
      changed_when: false

    - name: Install Bundler
      shell: >
        /bin/bash --login -c
        "rvm ruby-2.7.0@crypto_libertarian-report_ip do
        gem install bundler -v '~> 2.0'"
      when: check_bundler_result_for_report_ip.rc != 0

    - name: Install Bundler
      shell: >
        /bin/bash --login -c
        "rvm ruby-2.7.0@crypto_libertarian-dyndns do
        gem install bundler -v '~> 2.0'"
      when: check_bundler_result_for_dyndns.rc != 0

    - name: Copy application
      copy:
        src: '../../apps/{{ item }}/'
        dest: '/opt/{{ item }}/'
        owner: '{{ item }}'
        group: '{{ item }}'
      with_items:
        - report_ip
        - dyndns

    - name: Copy executable
      copy:
        src: ../../apps/dyndns/exe/crypto_libertarian-dyndns
        dest: /opt/dyndns/exe/crypto_libertarian-dyndns
        owner: dyndns
        group: dyndns
        mode: 'u=rwx,g=rx,o=rx'

    - name: Install gems
      shell: >
        /bin/bash --login -c
        "rvm ruby-2.7.0@crypto_libertarian-{{ item }} do
        bundle install --gemfile /opt/{{ item }}/Gemfile"
      changed_when: false
      with_items:
        - report_ip
        - dyndns

    - name: Install systemd service "report_ip"
      copy:
        src: ../../files/report_ip.service
        dest: /etc/systemd/system/report_ip.service
        owner: root
        group: root
        mode: 'u=rw,g=r,o=r'
      register: install_systemd_service_result_for_report_ip

    - name: Install systemd service "dyndns"
      copy:
        src: ../../files/dyndns.service
        dest: /etc/systemd/system/dyndns.service
        owner: root
        group: root
        mode: 'u=rw,g=r,o=r'
      register: install_systemd_service_result_for_dyndns

    - name: Install systemd socket "dyndns"
      copy:
        src: ../../files/dyndns.socket
        dest: /etc/systemd/system/dyndns.socket
        owner: root
        group: root
        mode: 'u=rw,g=r,o=r'
      register: install_systemd_socket_result_for_dyndns

    - name: Disable and stop systemd service "systemd-resolved"
      systemd:
        name: systemd-resolved.service
        enabled: false
        state: stopped

    - name: Update systemd service "report_ip"
      systemd:
        daemon_reload: true
        name: report_ip.service
        enabled: true
      when: install_systemd_service_result_for_report_ip.changed

    - name: Update systemd service "dyndns"
      systemd:
        daemon_reload: true
        name: dyndns.service
        enabled: true
      when: install_systemd_service_result_for_dyndns.changed

    - name: Update systemd socket "dyndns"
      systemd:
        daemon_reload: true
        name: dyndns.socket
        enabled: true
      when: install_systemd_socket_result_for_dyndns.changed

    - name: Restart systemd service
      systemd:
        name: '{{ item }}.service'
        state: restarted
      changed_when: false
      with_items:
        - report_ip
        - dyndns
